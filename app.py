# External packages
import streamlit as st
from src.ranking import RankingModel
from bs4 import BeautifulSoup


# Setting page layout
st.set_page_config(
    page_title="–ü–æ–∏—Å–∫ –≤–∞–∫–∞–Ω—Å–∏–π –ø–æ —Ä–µ–∑—é–º–µ",
    page_icon="ü§ñ",
    layout="centered",
)

task = st.radio(
    "–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–¥–∞—á—É", ["–ü–æ–∏—Å–∫ –≤–∞–∫–∞–Ω—Å–∏–π", "–ü–æ–∏—Å–∫ —Ä–µ–∑—é–º–µ"])

model_name = st.radio(
    "–ú–æ–¥–µ–ª—å", ["distiluse", "miniLM", "rubert"])

final_text = ""
task_name = None

if task == "–ü–æ–∏—Å–∫ –≤–∞–∫–∞–Ω—Å–∏–π":
    task_name = "vacancy_search"
    position_name = st.text_area(
        "–ñ–µ–ª–∞–µ–º–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å", max_chars=60
    )
    skills = st.text_area(
        "–†–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –Ω–∞–≤—ã–∫–∏",
        height=100)
    work_experience = st.text_area(
        "–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã",
        height=100)
    education = st.text_area(
        "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ",
        height=100)
    final_text = position_name + " –ù–∞–≤—ã–∫–∏: " + skills + " –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã: " + work_experience + \
                 " –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: " + education

    button_text = '–ù–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏'
else:
    task_name = "cv_search"
    vacancy_name = st.text_area(
        "–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏", max_chars=60
    )
    position_requirements = st.text_area(
        "–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –∫–∞–Ω–¥–∏–¥–∞—Ç—É",
        height=100)
    position_responsibilities = st.text_area(
        "–û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏",
        height=100
    )
    final_text = vacancy_name + " –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è: " + position_requirements +\
                 "–û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏: " + position_responsibilities

    button_text = '–ù–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤'

if st.button(button_text):
    model = RankingModel(10)
    best_candidates = model.get_relevant_candidates(final_text, model_name, task_name)

    best_candidates = best_candidates.fillna("–ù–µ —É–∫–∞–∑–∞–Ω–æ")

    if task_name == "vacancy_search":
        html_columns = ['position_requirements','position_responsibilities']
        for col in html_columns:
            best_candidates[col] = best_candidates[col].apply(lambda x: BeautifulSoup(x, 'html.parser').get_text())

        for index, row in best_candidates.iterrows():
            st.header(row['vacancy_name'])
            st.subheader(f"**–ö–æ–º–ø–∞–Ω–∏—è:** {row['full_company_name']}")
            st.write(f"**–¢–∏–ø –∑–∞–Ω—è—Ç–æ—Å—Ç–∏:** {row['schedule_type']}, {row['busy_type']}")
            st.write(f"**–†–µ–≥–∏–æ–Ω:** {row['regionName']}")
            st.write('\n')

            st.write(f"**–ó–∞—Ä–ø–ª–∞—Ç–∞:** {row['salary']}")
            st.write(f"**–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:** {row['position_requirements']}")

            st.write(f"**–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ:** {row['education']}")
            st.write('\n')

            st.write(f"**–û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏:** {row['position_responsibilities']}")
            st.write(f"**–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:** {row['contact_person']}")

            st.markdown('---')
    else:
        st.title('Candidate Details')
        html_columns = ['workExperienceList']
        for col in html_columns:
            best_candidates[col] = best_candidates[col].apply(lambda x: BeautifulSoup(x, 'html.parser').get_text())

        for index, row in best_candidates.iterrows():
            st.header(f"–ö–∞–Ω–¥–∏–¥–∞—Ç {index + 1}")
            st.write(f"**–ü–æ–ª:** {row['gender']}, **–í–æ–∑—Ä–∞—Å—Ç:** {row['age']}")
            st.write(f"**–ó–∞—Ä–ø–ª–∞—Ç–∞:** {row['salary']}")
            st.write('\n')

            st.write(f"**–î–æ–ª–∂–Ω–æ—Å—Ç—å:** {row['positionName']}")
            st.write(f"**–ú–µ—Å—Ç–æ –ø–æ–ª–æ–∂–µ–Ω–∏—è:** {row['localityName']}")
            st.write(f"**–ó–∞–Ω—è—Ç–æ—Å—Ç—å:** {row['busyType']}, {row['scheduleType']}")
            st.write('\n')

            st.write(f"**Hard Skills:** {row['hardSkills']}")
            st.write(f"**Soft Skills:** {row['softSkills']}")
            st.write(f"**–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ:** {row['educationList']}")
            st.write(f"**Academic Degree:** {row['academicDegree']}")
            st.write(f"**–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã:** {row['workExperienceList']}")
            st.write('\n')

            st.write(f"**–ì–æ—Ç–æ–≤ –ª–∏ –∫ –æ–±—É—á–µ–Ω–∏—é:** {row['retrainingCapability']}")
            st.write(f"**–ì–æ—Ç–æ–≤ –ª–∏ –∫ –∫–æ–º–∞–Ω–∏—Ä–æ–≤–∫–∞–º:** {row['businessTrip']}")
            st.write(f"**–ì–æ—Ç–æ–≤ –ª–∏ –∫ –ø–µ—Ä–µ–µ–∑–¥–∞–º:** {row['relocation']}")

            st.markdown('---')  # Adding a horizontal line between candidates
